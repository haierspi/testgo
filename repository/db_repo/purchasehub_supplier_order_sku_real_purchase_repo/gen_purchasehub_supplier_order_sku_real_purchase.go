///////////////////////////////////////////////////////////
// THIS FILE IS AUTO GENERATED by gormgen, DON'T EDIT IT //
//        ANY CHANGES DONE HERE WILL BE LOST             //
///////////////////////////////////////////////////////////

package purchasehub_supplier_order_sku_real_purchase_repo

import (
	"fmt"
	"time"

	"go_service/repository/db_repo"

	"github.com/pkg/errors"
	"gorm.io/gorm"
)

func NewModel() *PurchasehubSupplierOrderSkuRealPurchase {
	return new(PurchasehubSupplierOrderSkuRealPurchase)
}

func NewQueryBuilder() *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	return new(purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder)
}

func (t *PurchasehubSupplierOrderSkuRealPurchase) Create(db *gorm.DB) (id int32, err error) {
	if err = db.Create(t).Error; err != nil {
		return 0, errors.Wrap(err, "create err")
	}
	return t.Id, nil
}

type purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder struct {
	order []string
	where []struct {
		prefix string
		value  interface{}
	}
	limit  int
	offset int
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) buildQuery(db *gorm.DB) *gorm.DB {
	ret := db
	for _, where := range qb.where {
		ret = ret.Where(where.prefix, where.value)
	}
	for _, order := range qb.order {
		ret = ret.Order(order)
	}
	ret = ret.Limit(qb.limit).Offset(qb.offset)
	return ret
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) Updates(db *gorm.DB, m map[string]interface{}) (err error) {
	db = db.Model(&PurchasehubSupplierOrderSkuRealPurchase{})

	for _, where := range qb.where {
		db.Where(where.prefix, where.value)
	}

	if err = db.Updates(m).Error; err != nil {
		return errors.Wrap(err, "updates err")
	}
	return nil
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) Delete(db *gorm.DB) (err error) {
	for _, where := range qb.where {
		db = db.Where(where.prefix, where.value)
	}

	if err = db.Delete(&PurchasehubSupplierOrderSkuRealPurchase{}).Error; err != nil {
		return errors.Wrap(err, "delete err")
	}
	return nil
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) Count(db *gorm.DB) (int64, error) {
	var c int64
	res := qb.buildQuery(db).Model(&PurchasehubSupplierOrderSkuRealPurchase{}).Count(&c)
	if res.Error != nil && res.Error == gorm.ErrRecordNotFound {
		c = 0
	}
	return c, res.Error
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) First(db *gorm.DB) (*PurchasehubSupplierOrderSkuRealPurchase, error) {
	ret := &PurchasehubSupplierOrderSkuRealPurchase{}
	res := qb.buildQuery(db).First(ret)
	if res.Error != nil && res.Error == gorm.ErrRecordNotFound {
		ret = nil
	}
	return ret, res.Error
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) QueryOne(db *gorm.DB) (*PurchasehubSupplierOrderSkuRealPurchase, error) {
	qb.limit = 1
	ret, err := qb.QueryAll(db)
	if len(ret) > 0 {
		return ret[0], err
	}
	return nil, err
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) QueryAll(db *gorm.DB) ([]*PurchasehubSupplierOrderSkuRealPurchase, error) {
	var ret []*PurchasehubSupplierOrderSkuRealPurchase
	err := qb.buildQuery(db).Find(&ret).Error
	return ret, err
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) Limit(limit int) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.limit = limit
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) Offset(offset int) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.offset = offset
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereId(p db_repo.Predicate, value int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "id", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereIdIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "id", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereIdNotIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "id", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderById(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "id "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePhsoid(p db_repo.Predicate, value int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "phsoid", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePhsoidIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "phsoid", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePhsoidNotIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "phsoid", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderByPhsoid(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "phsoid "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuPurchaseQuantity(p db_repo.Predicate, value string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_purchase_quantity", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuPurchaseQuantityIn(value []string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_purchase_quantity", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuPurchaseQuantityNotIn(value []string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_purchase_quantity", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderBySkuPurchaseQuantity(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "sku_purchase_quantity "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuPurchasePrice(p db_repo.Predicate, value string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_purchase_price", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuPurchasePriceIn(value []string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_purchase_price", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuPurchasePriceNotIn(value []string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_purchase_price", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderBySkuPurchasePrice(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "sku_purchase_price "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuGoodsDetails(p db_repo.Predicate, value string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_goods_details", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuGoodsDetailsIn(value []string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_goods_details", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereSkuGoodsDetailsNotIn(value []string) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "sku_goods_details", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderBySkuGoodsDetails(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "sku_goods_details "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePurchaseQuantity(p db_repo.Predicate, value int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "purchase_quantity", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePurchaseQuantityIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "purchase_quantity", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePurchaseQuantityNotIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "purchase_quantity", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderByPurchaseQuantity(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "purchase_quantity "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePurchaseAmount(p db_repo.Predicate, value float64) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "purchase_amount", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePurchaseAmountIn(value []float64) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "purchase_amount", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WherePurchaseAmountNotIn(value []float64) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "purchase_amount", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderByPurchaseAmount(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "purchase_amount "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereStatus(p db_repo.Predicate, value int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "status", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereStatusIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "status", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereStatusNotIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "status", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderByStatus(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "status "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereIsChange(p db_repo.Predicate, value int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "is_change", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereIsChangeIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "is_change", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereIsChangeNotIn(value []int32) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "is_change", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderByIsChange(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "is_change "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereCreatedAt(p db_repo.Predicate, value time.Time) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "created_at", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereCreatedAtIn(value []time.Time) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "created_at", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereCreatedAtNotIn(value []time.Time) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "created_at", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderByCreatedAt(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "created_at "+order)
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereUpdatedAt(p db_repo.Predicate, value time.Time) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "updated_at", p),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereUpdatedAtIn(value []time.Time) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "updated_at", "IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) WhereUpdatedAtNotIn(value []time.Time) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	qb.where = append(qb.where, struct {
		prefix string
		value  interface{}
	}{
		fmt.Sprintf("%v %v ?", "updated_at", "NOT IN"),
		value,
	})
	return qb
}

func (qb *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder) OrderByUpdatedAt(asc bool) *purchasehubSupplierOrderSkuRealPurchaseRepoQueryBuilder {
	order := "DESC"
	if asc {
		order = "ASC"
	}

	qb.order = append(qb.order, "updated_at "+order)
	return qb
}
